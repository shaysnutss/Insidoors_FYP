version: "3.8"


services:
  ####################################
  # Atomic Microservice: account-service
  ####################################
  account-service:
    build:
      context: ./account-service
      dockerfile: Dockerfile
    restart: always
    env_file:
      - "dev.env"
    ports:
      - "30000:8080"
  ####################################
  # Atomic Microservice: task-management-service
  ####################################
  task-management-service:
    build:
      context: ./task-management-service
      dockerfile: Dockerfile
    restart: always
    # env_file:
    #   - "dev.env"
    ports:
      - "30001:8081"
  ####################################
  # Atomic Microservice: employee-service
  ####################################
  employee-service:
    build:
      context: ./employee-service
      dockerfile: Dockerfile
    restart: always
    # env_file:
    #   - "dev.env"
    ports:
      - "30002:8082"
  ####################################
  # Atomic Microservice: comments-service
  ####################################
  comments-service:
    build:
      context: ./comments-service
      dockerfile: Dockerfile
    restart: always
    # env_file:
    #   - "dev.env"
    ports:
      - "30004:8083"
  ####################################
  # Atomic Microservice: behavioral-analysis-service
  ####################################
  behavioral-analysis-service:
    build:
      context: ./behavioral-analysis-service
      dockerfile: Dockerfile
    restart: always
    # env_file:
    #   - "dev.env"
    ports:
      - "30007:8084"
  ####################################
  # Atomic Microservice: insidoors-frontend
  ####################################
  insidoors-frontend:
    build:
      context: ./insidoors-frontend
      dockerfile: Dockerfile
    restart: always
    # env_file:
    #   - "dev.env"
    volumes:
      - ./insidoors-frontend:/app
    ports:
      - "30008:3000"
  ####################################
  # Composite Microservice: notification-service
  ####################################
  notification-service:
     build:
       context: ./notification-service
       dockerfile: Dockerfile
     restart: always
     env_file:
     - "dev.env"
     ports:
      - "30009:8080"
  ###################################
  # Composite Microservice: task-management-composite
  ####################################
  task-management-composite:
    build:
      context: ./task-management-composite
      dockerfile: Dockerfile
    restart: always
    env_file:
      - "dev.env"
    ports:
      - "30010:8085"
  ###################################
  # Composite Microservice: behavioral-analysis-composite-service
  ####################################
  behavioral-analysis-composite-service:
    build:
      context: ./behavioral-analysis-composite-service
      dockerfile: Dockerfile
    restart: always
    env_file:
     - "dev.env"
    ports:
      - "30011:8090"
  ####################################
  # Proxy Log
  ####################################
  proxy-log:
    build:
      context: ./proxy-log
      dockerfile: Dockerfile
    restart: always
    # env_file:
    #   - "dev.env"
    ports:
      - "30012:8086"
  ####################################
  # Building Access
  ####################################
  building-access:
    build:
      context: ./building-access
      dockerfile: Dockerfile
    restart: always
    # env_file:
    #   - "dev.env"
    ports:
      - "30013:8087"
  ####################################
  # PC Access
  ####################################
  pc-access:
    build:
      context: ./pc-access
      dockerfile: Dockerfile
    restart: always
    # env_file:
    #   - "dev.env"
    ports:
      - "30014:8088"
  ####################################
  # RBA
  ####################################
  rule-based-algorithm:
    build:
      context: ./rule-based-algorithm
      dockerfile: Dockerfile
    restart: always
    # env_file:
    #   - "dev.env"
    ports:
      - "30015:8089"
    volumes:
      - ./rule-based-algorithm/src/main/resources/data:/app/data
  ####################################
  # RBA Scheduler
  ####################################
  scheduler-service:
    build:
      context: ./scheduler-service
      dockerfile: Dockerfile
    restart: always
    env_file:
      - "dev.env"
    ports:
      - "30016:8080"
  ####################################
  # ml-service
  ####################################
  ml-service:
    build:
      context: ./ml-service
      dockerfile: Dockerfile
    restart: always
    ports:
      - "30017:5000"
    environment:
      - PYTHONUNBUFFERED=1
